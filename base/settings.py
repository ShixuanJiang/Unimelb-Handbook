"""
Django settings for base project.

Generated by 'django-admin startproject' using Django 3.2.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
import os
from datetime import timedelta

from configs.database import MAIN_DATABASE
from configs.basic import SYS_LANGUAGE, IS_DEBUG, SYS_TIMEZONE, CSRF_SITES

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATICFILES_DIRS = (
    ('admin', os.path.join(STATIC_ROOT, 'admin').replace('\\', '/')),
    ('rest_framework', os.path.join(STATIC_ROOT,
                                    'rest_framework').replace('\\', '/')),
    ('debug_toolbar', os.path.join(STATIC_ROOT, 'debug_toolbar').replace('\\', '/')),
    ('django_extensions', os.path.join(STATIC_ROOT,
                                       'django_extensions').replace('\\', '/')),
    ('images', os.path.join(STATIC_ROOT, 'images').replace('\\', '/')),
    ('goods_images', os.path.join(STATIC_ROOT, 'images').replace('\\', '/')),
    ('import_export', os.path.join(STATIC_ROOT,
                                   'import_export').replace('\\', '/')),
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-t1asq1=(x^n@x0$(hi9lf1kjpba+0m)jmbj44kj_(-$d7fs)3w'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = IS_DEBUG

# Allow All IP Connects
ALLOWED_HOSTS = ['*']
CSRF_TRUSTED_ORIGINS = CSRF_SITES

# Application definition

INSTALLED_APPS = [
    # 处理跨域问题
    'corsheaders',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # drf module
    'rest_framework',
    # 定时任务
    'django_apscheduler',
    'apps.timejob',  # 用于调用定时任务的App

    # all apps,
    'apps.user',
    'apps.goods',

    # export function
    'import_export',

    # debug 工具
    'debug_toolbar',
    'django_extensions',

    # https://pypi.org/project/drf-api-logger/
    'drf_api_logger',  # Add here

    # https://django-filter.readthedocs.io/en/stable/guide/install.html
    'django_filters',

    # 定时任务模块
    'django_crontab',
    # 自动化生成文档
    'drf_yasg',
]

MIDDLEWARE = [
    "debug_toolbar.middleware.DebugToolbarMiddleware",
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',  # 允许所有请求跨域
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    'drf_api_logger.middleware.api_logger_middleware.APILoggerMiddleware',  # Add here
]

DRF_API_LOGGER_DATABASE = True  # Default to False
DRF_API_LOGGER_SIGNAL = True  # Default to False

# 允许所有请求跨域
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True

# debug tool 中间件
DEBUG_TOOLBAR_PANELS = [
    'debug_toolbar.panels.versions.VersionsPanel',
    'debug_toolbar.panels.timer.TimerPanel',
    'debug_toolbar.panels.settings.SettingsPanel',
    'debug_toolbar.panels.headers.HeadersPanel',
    'debug_toolbar.panels.request.RequestPanel',
    'debug_toolbar.panels.sql.SQLPanel',
    'debug_toolbar.panels.staticfiles.StaticFilesPanel',
    'debug_toolbar.panels.templates.TemplatesPanel',
    'debug_toolbar.panels.cache.CachePanel',
    'debug_toolbar.panels.signals.SignalsPanel',
    'debug_toolbar.panels.logging.LoggingPanel',
    'debug_toolbar.panels.redirects.RedirectsPanel',
]

ROOT_URLCONF = 'base.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'base.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    'default': MAIN_DATABASE
}

# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = SYS_LANGUAGE

TIME_ZONE = SYS_TIMEZONE

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# [PartAuto] Rest Framework Config
REST_FRAMEWORK = {
    'PAGE_SIZE': 20,  # 默认翻页 20
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',  # 翻页策略
    # 定制的异常处理
    'EXCEPTION_HANDLER': 'utils.rest_framework_util.exception_handler.custom_exception_handler',
    # 自动化生成文档
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    # 认证
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework.authentication.BasicAuthentication'
    ],
    # 默认权限
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    # 默认过滤方式
    'DEFAULT_FILTER_BACKENDS': (
        'django_filters.rest_framework.DjangoFilterBackend',
    )
}

INTERNAL_IPS = [
    # ...
    "127.0.0.1",
    # ...
]

# migration-config
MIGRATION_MODULES = {
    'user': 'migrations.user',
    'timejob': 'migrations.timejob',
    'goods': 'migrations.goods'
}

# django-rest-framework-simple-jwt  授权相关设置
SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(days=100),
    'REFRESH_TOKEN_LIFETIME': timedelta(days=100),
    'ROTATE_REFRESH_TOKENS': False,
    'BLACKLIST_AFTER_ROTATION': True,
    'UPDATE_LAST_LOGIN': True,
    'AUTH_HEADER_TYPES': ('Bearer',),
    'AUTH_HEADER_NAME': 'HTTP_AUTHORIZATION',
    'USER_ID_FIELD': 'id',
    'USER_ID_CLAIM': 'id',
    'AUTH_TOKEN_CLASSES': ('rest_framework_simplejwt.tokens.AccessToken',),
    'TOKEN_TYPE_CLAIM': 'token_type',
    'JTI_CLAIM': 'jti',
    'SLIDING_TOKEN_REFRESH_EXP_CLAIM': 'refresh_exp',
    'SLIDING_TOKEN_LIFETIME': timedelta(minutes=100),
    'SLIDING_TOKEN_REFRESH_LIFETIME': timedelta(days=100),
}

AUTH_USER_MODEL = "user.User"

# Params
WECHAT_LOGIN_API_URL = ''

CRONTAB_COMMAND_PREFIX = 'LANG_ALL=zh_cn.UTF-8'
